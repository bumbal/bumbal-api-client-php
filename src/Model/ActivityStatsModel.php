<?php
/**
 * ActivityStatsModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  BumbalClient
 * @author   Swaagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * OpenAPI spec version: 2.0
 * Contact: support@bumbal.eu
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace BumbalClient\Model;

use \ArrayAccess;

/**
 * ActivityStatsModel Class Doc Comment
 *
 * @category    Class
 * @package     BumbalClient
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class ActivityStatsModel implements ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'ActivityStatsModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = [
        'nr_of_package_lines' => 'int',
        'nr_of_inbound_package_lines' => 'int',
        'nr_of_outbound_package_lines' => 'int',
        'nr_of_assess_package_lines' => 'int',
        'nr_of_recoveries' => 'int',
        'nr_of_questionnaires' => 'int',
        'nr_of_bundled_activities' => 'int',
        'nr_of_transactions' => 'int',
        'nr_of_notes' => 'int',
        'nr_of_irregularities' => 'int',
        'nr_of_files' => 'int',
        'last_sent_message_type_id' => 'int'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerFormats = [
        'nr_of_package_lines' => 'int64',
        'nr_of_inbound_package_lines' => 'int64',
        'nr_of_outbound_package_lines' => 'int64',
        'nr_of_assess_package_lines' => 'int64',
        'nr_of_recoveries' => 'int64',
        'nr_of_questionnaires' => 'int64',
        'nr_of_bundled_activities' => 'int64',
        'nr_of_transactions' => 'int64',
        'nr_of_notes' => 'int64',
        'nr_of_irregularities' => 'int64',
        'nr_of_files' => 'int64',
        'last_sent_message_type_id' => 'int64'
    ];

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = [
        'nr_of_package_lines' => 'nr_of_package_lines',
        'nr_of_inbound_package_lines' => 'nr_of_inbound_package_lines',
        'nr_of_outbound_package_lines' => 'nr_of_outbound_package_lines',
        'nr_of_assess_package_lines' => 'nr_of_assess_package_lines',
        'nr_of_recoveries' => 'nr_of_recoveries',
        'nr_of_questionnaires' => 'nr_of_questionnaires',
        'nr_of_bundled_activities' => 'nr_of_bundled_activities',
        'nr_of_transactions' => 'nr_of_transactions',
        'nr_of_notes' => 'nr_of_notes',
        'nr_of_irregularities' => 'nr_of_irregularities',
        'nr_of_files' => 'nr_of_files',
        'last_sent_message_type_id' => 'last_sent_message_type_id'
    ];


    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = [
        'nr_of_package_lines' => 'setNrOfPackageLines',
        'nr_of_inbound_package_lines' => 'setNrOfInboundPackageLines',
        'nr_of_outbound_package_lines' => 'setNrOfOutboundPackageLines',
        'nr_of_assess_package_lines' => 'setNrOfAssessPackageLines',
        'nr_of_recoveries' => 'setNrOfRecoveries',
        'nr_of_questionnaires' => 'setNrOfQuestionnaires',
        'nr_of_bundled_activities' => 'setNrOfBundledActivities',
        'nr_of_transactions' => 'setNrOfTransactions',
        'nr_of_notes' => 'setNrOfNotes',
        'nr_of_irregularities' => 'setNrOfIrregularities',
        'nr_of_files' => 'setNrOfFiles',
        'last_sent_message_type_id' => 'setLastSentMessageTypeId'
    ];


    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = [
        'nr_of_package_lines' => 'getNrOfPackageLines',
        'nr_of_inbound_package_lines' => 'getNrOfInboundPackageLines',
        'nr_of_outbound_package_lines' => 'getNrOfOutboundPackageLines',
        'nr_of_assess_package_lines' => 'getNrOfAssessPackageLines',
        'nr_of_recoveries' => 'getNrOfRecoveries',
        'nr_of_questionnaires' => 'getNrOfQuestionnaires',
        'nr_of_bundled_activities' => 'getNrOfBundledActivities',
        'nr_of_transactions' => 'getNrOfTransactions',
        'nr_of_notes' => 'getNrOfNotes',
        'nr_of_irregularities' => 'getNrOfIrregularities',
        'nr_of_files' => 'getNrOfFiles',
        'last_sent_message_type_id' => 'getLastSentMessageTypeId'
    ];

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    public static function setters()
    {
        return self::$setters;
    }

    public static function getters()
    {
        return self::$getters;
    }

    

    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['nr_of_package_lines'] = isset($data['nr_of_package_lines']) ? $data['nr_of_package_lines'] : null;
        $this->container['nr_of_inbound_package_lines'] = isset($data['nr_of_inbound_package_lines']) ? $data['nr_of_inbound_package_lines'] : null;
        $this->container['nr_of_outbound_package_lines'] = isset($data['nr_of_outbound_package_lines']) ? $data['nr_of_outbound_package_lines'] : null;
        $this->container['nr_of_assess_package_lines'] = isset($data['nr_of_assess_package_lines']) ? $data['nr_of_assess_package_lines'] : null;
        $this->container['nr_of_recoveries'] = isset($data['nr_of_recoveries']) ? $data['nr_of_recoveries'] : null;
        $this->container['nr_of_questionnaires'] = isset($data['nr_of_questionnaires']) ? $data['nr_of_questionnaires'] : null;
        $this->container['nr_of_bundled_activities'] = isset($data['nr_of_bundled_activities']) ? $data['nr_of_bundled_activities'] : null;
        $this->container['nr_of_transactions'] = isset($data['nr_of_transactions']) ? $data['nr_of_transactions'] : null;
        $this->container['nr_of_notes'] = isset($data['nr_of_notes']) ? $data['nr_of_notes'] : null;
        $this->container['nr_of_irregularities'] = isset($data['nr_of_irregularities']) ? $data['nr_of_irregularities'] : null;
        $this->container['nr_of_files'] = isset($data['nr_of_files']) ? $data['nr_of_files'] : null;
        $this->container['last_sent_message_type_id'] = isset($data['last_sent_message_type_id']) ? $data['last_sent_message_type_id'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = [];

        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        return true;
    }


    /**
     * Gets nr_of_package_lines
     * @return int
     */
    public function getNrOfPackageLines()
    {
        return $this->container['nr_of_package_lines'];
    }

    /**
     * Sets nr_of_package_lines
     * @param int $nr_of_package_lines The amount of package lines attached to the activity
     * @return $this
     */
    public function setNrOfPackageLines($nr_of_package_lines)
    {
        $this->container['nr_of_package_lines'] = $nr_of_package_lines;

        return $this;
    }

    /**
     * Gets nr_of_inbound_package_lines
     * @return int
     */
    public function getNrOfInboundPackageLines()
    {
        return $this->container['nr_of_inbound_package_lines'];
    }

    /**
     * Sets nr_of_inbound_package_lines
     * @param int $nr_of_inbound_package_lines The amount of package lines attached to the activity which are of action type inbound (=load)
     * @return $this
     */
    public function setNrOfInboundPackageLines($nr_of_inbound_package_lines)
    {
        $this->container['nr_of_inbound_package_lines'] = $nr_of_inbound_package_lines;

        return $this;
    }

    /**
     * Gets nr_of_outbound_package_lines
     * @return int
     */
    public function getNrOfOutboundPackageLines()
    {
        return $this->container['nr_of_outbound_package_lines'];
    }

    /**
     * Sets nr_of_outbound_package_lines
     * @param int $nr_of_outbound_package_lines The amount of package lines attached to the activity which are of action type outbound (=unload)
     * @return $this
     */
    public function setNrOfOutboundPackageLines($nr_of_outbound_package_lines)
    {
        $this->container['nr_of_outbound_package_lines'] = $nr_of_outbound_package_lines;

        return $this;
    }

    /**
     * Gets nr_of_assess_package_lines
     * @return int
     */
    public function getNrOfAssessPackageLines()
    {
        return $this->container['nr_of_assess_package_lines'];
    }

    /**
     * Sets nr_of_assess_package_lines
     * @param int $nr_of_assess_package_lines The amount of package lines attached to the activity which are of action type assess (=nor load or unload)
     * @return $this
     */
    public function setNrOfAssessPackageLines($nr_of_assess_package_lines)
    {
        $this->container['nr_of_assess_package_lines'] = $nr_of_assess_package_lines;

        return $this;
    }

    /**
     * Gets nr_of_recoveries
     * @return int
     */
    public function getNrOfRecoveries()
    {
        return $this->container['nr_of_recoveries'];
    }

    /**
     * Sets nr_of_recoveries
     * @param int $nr_of_recoveries The amount of recoveries attached to the activity (returns)
     * @return $this
     */
    public function setNrOfRecoveries($nr_of_recoveries)
    {
        $this->container['nr_of_recoveries'] = $nr_of_recoveries;

        return $this;
    }

    /**
     * Gets nr_of_questionnaires
     * @return int
     */
    public function getNrOfQuestionnaires()
    {
        return $this->container['nr_of_questionnaires'];
    }

    /**
     * Sets nr_of_questionnaires
     * @param int $nr_of_questionnaires The amount of answered questionnaires attached to the activity
     * @return $this
     */
    public function setNrOfQuestionnaires($nr_of_questionnaires)
    {
        $this->container['nr_of_questionnaires'] = $nr_of_questionnaires;

        return $this;
    }

    /**
     * Gets nr_of_bundled_activities
     * @return int
     */
    public function getNrOfBundledActivities()
    {
        return $this->container['nr_of_bundled_activities'];
    }

    /**
     * Sets nr_of_bundled_activities
     * @param int $nr_of_bundled_activities The amount of bundled activities attached to the activity
     * @return $this
     */
    public function setNrOfBundledActivities($nr_of_bundled_activities)
    {
        $this->container['nr_of_bundled_activities'] = $nr_of_bundled_activities;

        return $this;
    }

    /**
     * Gets nr_of_transactions
     * @return int
     */
    public function getNrOfTransactions()
    {
        return $this->container['nr_of_transactions'];
    }

    /**
     * Sets nr_of_transactions
     * @param int $nr_of_transactions The amount of transactions attached to the activity
     * @return $this
     */
    public function setNrOfTransactions($nr_of_transactions)
    {
        $this->container['nr_of_transactions'] = $nr_of_transactions;

        return $this;
    }

    /**
     * Gets nr_of_notes
     * @return int
     */
    public function getNrOfNotes()
    {
        return $this->container['nr_of_notes'];
    }

    /**
     * Sets nr_of_notes
     * @param int $nr_of_notes How many notes are attached to the activity
     * @return $this
     */
    public function setNrOfNotes($nr_of_notes)
    {
        $this->container['nr_of_notes'] = $nr_of_notes;

        return $this;
    }

    /**
     * Gets nr_of_irregularities
     * @return int
     */
    public function getNrOfIrregularities()
    {
        return $this->container['nr_of_irregularities'];
    }

    /**
     * Sets nr_of_irregularities
     * @param int $nr_of_irregularities How many irregularities are attached to the activity
     * @return $this
     */
    public function setNrOfIrregularities($nr_of_irregularities)
    {
        $this->container['nr_of_irregularities'] = $nr_of_irregularities;

        return $this;
    }

    /**
     * Gets nr_of_files
     * @return int
     */
    public function getNrOfFiles()
    {
        return $this->container['nr_of_files'];
    }

    /**
     * Sets nr_of_files
     * @param int $nr_of_files How many files are attached to the activity
     * @return $this
     */
    public function setNrOfFiles($nr_of_files)
    {
        $this->container['nr_of_files'] = $nr_of_files;

        return $this;
    }

    /**
     * Gets last_sent_message_type_id
     * @return int
     */
    public function getLastSentMessageTypeId()
    {
        return $this->container['last_sent_message_type_id'];
    }

    /**
     * Sets last_sent_message_type_id
     * @param int $last_sent_message_type_id The last sent communication message type ID
     * @return $this
     */
    public function setLastSentMessageTypeId($last_sent_message_type_id)
    {
        $this->container['last_sent_message_type_id'] = $last_sent_message_type_id;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\BumbalClient\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\BumbalClient\ObjectSerializer::sanitizeForSerialization($this));
    }
}


